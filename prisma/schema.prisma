// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Settings {
  id                  Int      @id @default(0)
  init                Boolean  @default(false)
  project_name        String   @default("My Movie Manager")
  omdb_api_key        String
  login_expiration    String   @default("7d")
  max_votes           Int      @default(20)
  max_proposals       Int      @default(4)
  schedule_enabled    Boolean  @default(true)
  schedule_watchlist  String   @default("0 15 * * 1")
  schedule_start      String   @default("0 19 * * 1")
  schedule_history    String   @default("45 23 * * 1")
  pause_time_min      Int      @default(15)
  num_of_movies       Int      @default(2)
  discord_enabled     Boolean  @default(false)
  discord_webhook_url String   @default("")
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  username     String   @unique
  password     String
  name         String
  verified     Boolean  @default(false)
  pw_reset     Boolean  @default(false)
  challenge    String   @unique @default(cuid())
  use_gravatar Boolean  @default(false)
  gravatar_url String?
  email_opt_in Boolean  @default(false)
  is_admin     Boolean  @default(false)
  Movie        Movie[]
  Vote         Vote[]
}

model Movie {
  imdb_id     String     @id
  createdAt   DateTime   @default(now())
  title       String
  year        Int
  genre       String
  link        String
  proposer_id Int
  proposer    User       @relation(fields: [proposer_id], references: [id])
  runtime     Int
  Vote        Vote[]
  WatchList   WatchList?
}

model Vote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  imdb_id   String
  movie     Movie    @relation(fields: [imdb_id], references: [imdb_id])
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])

  @@unique([imdb_id, user_id])
}

model WatchList {
  imdb_id    String   @id
  start_time DateTime
  movie      Movie    @relation(fields: [imdb_id], references: [imdb_id])
}

model History {
  imdb_id    String   @id
  watched_at DateTime @default(now())
  title      String
  link       String
}
